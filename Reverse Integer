# REVERSE INTEGER

# Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
# Assume the environment does not allow you to store 64-bit integers (signed or unsigned).


class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """

        string = str(x)
        new=[i for i in string]

        if len(string)==1:
            return int(string)

        
        if new[0]!='+' and new[0]!='-':
            str1=''
            new.reverse()
            ans = int(str1.join(new)) 
        else:
            str1=''
            sym = new[0]
            new.remove(new[0])
            new.reverse()
            ans = int(sym+str1.join(new))

        if ans>-2**31 and ans<2**31-1:
            return ans
        else:
            return 0
